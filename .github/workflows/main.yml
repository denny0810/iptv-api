name: 'Update schedule'

on:
  schedule:
    - cron: '0 22,10 * * *'
  workflow_dispatch:
   # branches:
   #   - master
   #   - dev
   #   - gd
jobs:
  push:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ 'ubuntu-latest' ]
    steps:
      
      - name: Set branch name
        id: vars
        run: |
          if [[ "${{ github.repository_owner }}" == "Guovin" ]]; then
            echo "BRANCH_NAME=gd" >> $GITHUB_ENV
          else
            echo "BRANCH_NAME=master" >> $GITHUB_ENV
          fi
      
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}
          token: ${{ secrets.GITHUB_TOKEN }}  # Ensures push access
          fetch-depth: 0
          
      - name: Run with setup-python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          update-environment: true
          cache: 'pipenv'
            
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
            
      - name: Install dependecies
        run: pipenv install --deploy    
        
      - name: Check open_driver config
        id: check_driver
        run: |
          echo "OPEN_DRIVER=$(python -c '
          try:
            from utils.config import config
            open_driver = config.open_driver
          except:
            open_driver = False
          print(open_driver)')" >> $GITHUB_ENV
      
      - name: Set up Chrome
        if: env.OPEN_DRIVER == 'True'
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable
      
      - name: Download chrome driver
        if: env.OPEN_DRIVER == 'True'
        uses: nanasess/setup-chromedriver@v1
      
      - name: Install FFmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg
      
      - name: Install selenium
        if: env.OPEN_DRIVER == 'True'
        run: pipenv install selenium
      
      - name: Update
        run: pipenv run dev
      
      - name: Commit and push if changed
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          if ! git diff --quiet; then
            git add .
            git commit -m "Automated update [skip ci]" -a || exit 0
            git pull --rebase origin ${{ env.BRANCH_NAME }}  # Prevent push conflicts
            git push origin ${{ env.BRANCH_NAME }}
          else
            echo "No changes to commit."
          fi
